#!/bin/bash

# H√†m g·ª≠i th√¥ng b√°o ƒë·∫øn Google Chat
send_google_chat_message() {
    local message_raw="$1"
    # Escape special JSON characters in the message
    # Replace " with \"
    # Replace \ with \\ (to keep literal backslashes)
    # Replace newline with \n
    # Replace carriage return with \r
    # Replace tab with \t
    # Add other replacements as needed (e.g., for /, \b, \f)
    local message_escaped=$(echo "$message_raw" | sed -e 's/\\/\\\\/g' -e 's/"/\\"/g' -e 's/\n/\\n/g' -e 's/\r/\\r/g' -e 's/\t/\\t/g')

    local webhook_url="https://chat.googleapis.com/v1/spaces/AAQAjBi7qCY/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=0nUWD7NOCGq67ZDDXXa-Q0QvxImA_yw52UK7F73A8HQ"

    # G·ª≠i tin nh·∫Øn
    local response=$(curl -s -w "%{http_code}" -o /tmp/chat_response.txt \
        -X POST "$webhook_url" \
        -H "Content-Type: application/json" \
        -d "{\"text\": \"${message_escaped}\"}")

    local body=$(cat /tmp/chat_response.txt)
    
    # Ki·ªÉm tra m√£ ph·∫£n h·ªìi HTTP
    if [[ "$response" -ne 200 ]]; then
        echo "‚ùå L·ªói khi g·ª≠i ƒë·∫øn Google Chat. M√£ HTTP: $response"
        echo "Ph·∫£n h·ªìi API: $body"
        return 1
    fi

    echo "‚úÖ ƒê√£ g·ª≠i th√¥ng b√°o th√†nh c√¥ng ƒë·∫øn Google Chat!"
    return 0
}

# H√†m g·ª≠i th√¥ng b√°o b·∫Øt ƒë·∫ßu build
send_telegram_start() {
    local platform="$1"
    local build_type="$2"
    local flutter_branch="$3"
    local unity_branch="$4"
    
    local message="üöÄ *B·∫Øt ƒë·∫ßu Build*
    ‚§∑ Platform: ${platform}
    ‚§∑ Build Type: ${build_type}
    ‚§∑ Flutter Branch: ${flutter_branch}
    ‚§∑ Unity Branch: ${unity_branch}"

    send_google_chat_message "$message"
}

# H√†m g·ª≠i th√¥ng b√°o Unity export
send_telegram_unity_export() {
    local status="$1"
    local platform="$2"
    local build_type="$3"
    local unity_branch="$4"
    local unity_commit="$5"
    
    local emoji=""
    case "$status" in
        "success") emoji="‚úÖ";;
        "error") emoji="‚ùå";;
        *) emoji="‚ÑπÔ∏è";;
    esac
    
    local message="${emoji} *Unity Export - ${platform}*
    ‚§∑ Tr·∫°ng th√°i: ${status}
    ‚§∑ Build Type: ${build_type}
    ‚§∑ Unity Branch: ${unity_branch}
    ‚§∑ Commit: ${unity_commit}"

    send_google_chat_message "$message"
}

# H√†m g·ª≠i th√¥ng b√°o l·ªói
send_telegram_error() {
    local platform="$1"
    local build_type="$2"
    local flutter_branch="$3"
    local flutter_commit="$4"
    local unity_branch="$5"
    local unity_commit="$6"
    local error_message="$7"
    local error_details="$8"
    
    local message="‚ùå *Build L·ªói*
    ‚§∑ Platform: ${platform}
    ‚§∑ Build Type: ${build_type}
    ‚§∑ Flutter: ${flutter_branch} - ${flutter_commit}
    ‚§∑ Unity: ${unity_branch} - ${unity_commit}
    ‚§∑ L·ªói: ${error_message}
    ‚§∑ Th·ªùi gian: $(date '+%Y-%m-%d %H:%M:%S')"

    send_google_chat_message "$message"
}

# H√†m g·ª≠i th√¥ng b√°o k·∫øt th√∫c build
send_telegram_finish() {
    local platform="$1"
    local build_type="$2"
    local flutter_branch="$3"
    local flutter_commit="$4"
    local flutter_commit_msg="$5"
    local unity_branch="$6"
    local unity_commit="$7"
    local unity_commit_msg="$8"
    local version_code="$9"
    local version_name="${10}"
    local build_url="${11}"
    
    local message="üéâ *Build Ho√†n T·∫•t*
    ‚§∑ Platform: ${platform}
    ‚§∑ Build Type: ${build_type}
    ‚§∑ Version: ${version_name} (${version_code})
    ‚§∑ Flutter: ${flutter_branch} - ${flutter_commit} - ${flutter_commit_msg}
    ‚§∑ Unity: ${unity_branch} - ${unity_commit} - ${unity_commit_msg}
    ‚§∑ Th·ªùi gian: $(date '+%Y-%m-%d %H:%M:%S')
    ‚§∑ Link t·∫£i: ${build_url}"

    echo $message

    send_google_chat_message "$message"
}
